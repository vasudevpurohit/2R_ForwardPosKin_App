% %%clearing workspace
% clear all
% %%HW0 Serial Chain Robot - Forward & Inverse Kinematics
% 
% % Forward Kinematics
% 
% %defining the inputs
% L = [3,2]; %linkage lengths
% t = (0:1:360); 
% 
% [Xe,Ye,X1,Y1] = RR_ForwardPosKin(L,t);
% plot(X1,Y1,'c*');
% hold on
% plot(Xe,Ye,'k*');
% legend('Revolute Joint','End Effector Trajectory');
% title('Forward Kinematics - 2R Serial chain');
% xlabel('X');
% ylabel('Y');

%Inverse Kinematics

% clearing workspace
clear all

%defining the inputs
L = [3,2]; %linkage lengths
t = (0:1:360); 

% creating data for the end effector when the end effector moves along a 
% circle of radius 3cm and centered at (1,0) & degree (t) increments = 1deg 
xe = (1+(3*cosd(t)));
ye = 3*sind(t);

[theta1,theta2] = RR_InvPosKin(L,xe,ye);
% x1 = L(1)*cosd(theta1);
% y1 = L(1)*sind(theta1);

Xe(1,:) = (L(1)*cosd(theta1(1,:)))+(L(2)*cosd(theta1(1,:)+theta2(1,:)));
Ye(1,:) = (L(1)*sind(theta1(1,:)))+(L(2)*sind(theta1(1,:)+theta2(1,:)));

plot(Xe,Ye,'r.');
axis equal